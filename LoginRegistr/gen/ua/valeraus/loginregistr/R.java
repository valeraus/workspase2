/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package ua.valeraus.loginregistr;

public final class R {
    public static final class attr {
    }
    public static final class dimen {
        /**  Touch slop for the global toggle accessibility gesture 
         */
        public static final int accessibility_touch_slop=0x7f040066;
        /**  Default height of an action bar. 
         */
        public static final int action_bar_default_height=0x7f040030;
        /**  Vertical padding around action bar icons. 
         */
        public static final int action_bar_icon_vertical_padding=0x7f040031;
        /**  Maximum height for a stacked tab bar as part of an action bar 
         */
        public static final int action_bar_stacked_max_height=0x7f040048;
        /** 
         Maximum width for a stacked action bar tab. This prevents
         action bar tabs from becoming too wide on a wide screen when only
         a few are present.




    
         */
        public static final int action_bar_stacked_tab_max_width=0x7f040049;
        /**  Bottom margin for action bar subtitles 
         */
        public static final int action_bar_subtitle_bottom_margin=0x7f040035;
        /**  Text size for action bar subtitles 
         */
        public static final int action_bar_subtitle_text_size=0x7f040033;
        /**  Top margin for action bar subtitles 
         */
        public static final int action_bar_subtitle_top_margin=0x7f040034;
        /**  Text size for action bar titles 
         */
        public static final int action_bar_title_text_size=0x7f040032;
        /**  Minimum width for an action button in the menu area of an action bar 
         */
        public static final int action_button_min_width=0x7f040047;
        /**  Minimum popup width for selecting an activity in ActivityChooserDialog/ActivityChooserView. 
         */
        public static final int activity_chooser_popup_min_width=0x7f04003d;
        /**  Default screen margins, per the Android Design guidelines. 
         */
        public static final int activity_horizontal_margin=0x7f04009a;
        public static final int activity_vertical_margin=0x7f04009b;
        /**  Dialog button bar height 
         */
        public static final int alert_dialog_button_bar_height=0x7f04002d;
        /**  Dialog padding for round display 
         */
        public static final int alert_dialog_round_padding=0x7f04002b;
        /**  Dialog title height 
         */
        public static final int alert_dialog_title_height=0x7f04002c;
        public static final int ambient_shadow_alpha=0x7f040098;
        /** 
         The standard size (both width and height) of an application icon that
         will be displayed in the app launcher and elsewhere.




    
         */
        public static final int app_icon_size=0x7f040002;
        /** 
     Size of the offset applied to the position of the circular mask. This is only
     used on circular displays. In the case where there is no "chin", this will default
     to 0




    
         */
        public static final int circular_display_mask_offset=0x7f040090;
        public static final int datepicker_component_width=0x7f040088;
        public static final int datepicker_day_number_select_circle_radius=0x7f040083;
        /**  Used by SimpleMonthView 
         */
        public static final int datepicker_day_number_size=0x7f04007f;
        public static final int datepicker_header_height=0x7f04008c;
        public static final int datepicker_header_text_size=0x7f04008d;
        public static final int datepicker_month_day_label_text_size=0x7f040081;
        public static final int datepicker_month_label_size=0x7f040080;
        public static final int datepicker_month_list_item_header_height=0x7f040082;
        public static final int datepicker_selected_date_day_size=0x7f040089;
        public static final int datepicker_selected_date_month_size=0x7f04008a;
        public static final int datepicker_selected_date_year_size=0x7f04008b;
        public static final int datepicker_view_animator_height=0x7f040084;
        public static final int datepicker_year_label_height=0x7f040086;
        public static final int datepicker_year_label_text_size=0x7f040087;
        public static final int datepicker_year_picker_padding_top=0x7f040085;
        public static final int default_app_widget_padding_bottom=0x7f040046;
        /**  Default padding to apply to AppWidgetHostViews containing widgets targeting API level 14 and up. 
         */
        public static final int default_app_widget_padding_left=0x7f040043;
        public static final int default_app_widget_padding_right=0x7f040045;
        public static final int default_app_widget_padding_top=0x7f040044;
        /**  The default gap between components in a layout. 
         */
        public static final int default_gap=0x7f04003e;
        /** 
         The platform's desired fixed height for a dialog along the major axis
         (the screen is in portrait). This may be either a fraction or a dimension.




    
         */
        public static final int dialog_fixed_height_major=0x7f04001f;
        /** 
         The platform's desired fixed height for a dialog along the minor axis
         (the screen is in landscape). This may be either a fraction or a dimension.




    
         */
        public static final int dialog_fixed_height_minor=0x7f040020;
        /** 
         The platform's desired fixed width for a dialog along the major axis
         (the screen is in landscape). This may be either a fraction or a dimension.




    
         */
        public static final int dialog_fixed_width_major=0x7f04001d;
        /** 
         The platform's desired fixed width for a dialog along the minor axis
         (the screen is in portrait). This may be either a fraction or a dimension.




    
         */
        public static final int dialog_fixed_width_minor=0x7f04001e;
        /** 
         The platform's desired minimum size for a dialog's width when it
         is along the major axis (that is the screen is landscape).  This may
         be either a fraction or a dimension.




    
         */
        public static final int dialog_min_width_major=0x7f04001c;
        /** 
         The platform's desired minimum size for a dialog's width when it
         is along the minor axis (that is the screen is portrait).  This may
         be either a fraction or a dimension.




    
         */
        public static final int dialog_min_width_minor=0x7f040026;
        /**  Width of the icon in a dropdown list 
         */
        public static final int dropdownitem_icon_width=0x7f040041;
        /**  Text padding for dropdown items 
         */
        public static final int dropdownitem_text_padding_left=0x7f04003f;
        /**  Text padding for dropdown items 
         */
        public static final int dropdownitem_text_padding_right=0x7f040040;
        /**  Height of FaceUnlock view in keyguard 
         */
        public static final int face_unlock_height=0x7f04003c;
        /**  width of ImmersiveModeConfirmation (-1 for match_parent) 
         */
        public static final int immersive_mode_cling_width=0x7f04008e;
        /**  Shadow radius under the frame for the circular avatars. 
         */
        public static final int keyguard_avatar_frame_shadow_radius=0x7f04006c;
        /**  Stroke width of the frame for the circular avatars. 
         */
        public static final int keyguard_avatar_frame_stroke_width=0x7f04006b;
        /**  Size of the text under the avator on the multiuser lockscreen. 
         */
        public static final int keyguard_avatar_name_size=0x7f04006e;
        /**  Size of the avator on hte multiuser lockscreen. 
         */
        public static final int keyguard_avatar_size=0x7f04006d;
        /**  Size of clock font in LockScreen on Unsecure unlock screen. 
         */
        public static final int keyguard_lockscreen_clock_font_size=0x7f040036;
        /**  Size of lockscreen outerring on unsecure unlock LockScreen 
         */
        public static final int keyguard_lockscreen_outerring_diameter=0x7f040011;
        /**  Padding on left margin of PIN text entry field to center it when del button is showing 
         */
        public static final int keyguard_lockscreen_pin_margin_left=0x7f04003b;
        /**  Size of top margin on Clock font to edge on unlock LockScreen 
         */
        public static final int keyguard_lockscreen_status_line_clockfont_bottom_margin=0x7f04003a;
        /**  Size of top margin on Clock font to edge on unlock LockScreen 
         */
        public static final int keyguard_lockscreen_status_line_clockfont_top_margin=0x7f040039;
        /**  Size of right margin on Unsecure unlock LockScreen 
         */
        public static final int keyguard_lockscreen_status_line_font_right_margin=0x7f040038;
        /**  Size of status line font on Unsecure unlock LockScreen. 
         */
        public static final int keyguard_lockscreen_status_line_font_size=0x7f040037;
        /**  Margin around the various security views 
         */
        public static final int keyguard_muliuser_selector_margin=0x7f04006a;
        /**  Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_height=0x7f040068;
        /**  Margin around the various security views 
         */
        public static final int keyguard_security_view_margin=0x7f040069;
        /**  Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_width=0x7f040067;
        /**  Top margin for the clock view 
         */
        public static final int kg_clock_top_margin=0x7f04005b;
        /** 
         Size of the region along the edge of the screen that will accept
         swipes to scroll the widget area.




    
         */
        public static final int kg_edge_swipe_region_size=0x7f04006f;
        /**  Horizontal gap between keys in PIN and SIM PIN numeric keyboards in keyguard 
         */
        public static final int kg_key_horizontal_gap=0x7f04005c;
        /**  Horizontal gap between keys in PIN and SIM PIN numeric keyboards in keyguard 
         */
        public static final int kg_key_vertical_gap=0x7f04005d;
        /**  Horizontal gap between keys in PIN and SIM PIN numeric keyboards in keyguard 
         */
        public static final int kg_pin_key_height=0x7f04005e;
        /**  The height of the runway lights strip 
         */
        public static final int kg_runway_lights_height=0x7f040060;
        /** 
         Top margin for the runway lights. We add a negative margin in large
        devices to account for the widget pager padding




    
         */
        public static final int kg_runway_lights_top_margin=0x7f040065;
        /**  The height of the runway lights strip 
         */
        public static final int kg_runway_lights_vertical_padding=0x7f040061;
        /**  Space reserved at the bottom of secure views (pin/pattern/password/SIM pin/SIM puk) 
         */
        public static final int kg_secure_padding_height=0x7f04005f;
        /**  Keyguard dimensions 
 TEMP 
         */
        public static final int kg_security_panel_height=0x7f040053;
        /**  Height of security view in keyguard. 
         */
        public static final int kg_security_view_height=0x7f040054;
        /** 
    The height of widgets which do not support vertical resizing. This is only
    used on tablets; on phones, this size is determined by the space left by the
    security mode.




    
         */
        public static final int kg_small_widget_height=0x7f040071;
        /** 
    If the height if keyguard drops below this threshold (most likely
    due to the appearance of the IME), then drop the multiuser selector.




    
         */
        public static final int kg_squashed_layout_threshold=0x7f040070;
        /**  Size of the clock font in keyguard's status view 
         */
        public static final int kg_status_clock_font_size=0x7f040057;
        /**  Size of the date font in keyguard's status view 
         */
        public static final int kg_status_date_font_size=0x7f040058;
        /**  Size of margin on the right of keyguard's status view 
         */
        public static final int kg_status_line_font_right_margin=0x7f04005a;
        /**  Size of the generic status lines keyguard's status view 
         */
        public static final int kg_status_line_font_size=0x7f040059;
        /**  Bottom padding for the widget pager 
         */
        public static final int kg_widget_pager_bottom_padding=0x7f040064;
        /**  Horizontal padding for the widget pager 
         */
        public static final int kg_widget_pager_horizontal_padding=0x7f040062;
        /**  Top padding for the widget pager 
         */
        public static final int kg_widget_pager_top_padding=0x7f040063;
        /**  Height of widget view in keyguard. 
         */
        public static final int kg_widget_view_height=0x7f040056;
        /**  Width of widget view in keyguard. 
         */
        public static final int kg_widget_view_width=0x7f040055;
        /**  Leanback dialog horizontal margin 
         */
        public static final int leanback_alert_dialog_horizontal_margin=0x7f04002f;
        /**  Leanback dialog vertical margin 
         */
        public static final int leanback_alert_dialog_vertical_margin=0x7f04002e;
        public static final int light_radius=0x7f040097;
        /**  Lighting and shadow properties 
         */
        public static final int light_y=0x7f040095;
        public static final int light_z=0x7f040096;
        public static final int lock_pattern_dot_line_width=0x7f040091;
        public static final int lock_pattern_dot_size=0x7f040092;
        public static final int lock_pattern_dot_size_activated=0x7f040093;
        /**  Min width for a tablet device 
         */
        public static final int min_xlarge_screen_width=0x7f04000b;
        /**  Height of the bottom navigation / system bar. 
         */
        public static final int navigation_bar_height=0x7f040005;
        /**  Height of the bottom navigation bar in portrait; often the same as @dimen/navigation_bar_height 
         */
        public static final int navigation_bar_height_landscape=0x7f040006;
        /**  Width of the navigation bar when it is placed vertically on the screen 
         */
        public static final int navigation_bar_width=0x7f040007;
        /**  Size of the profile badge for notifications 
         */
        public static final int notification_badge_size=0x7f040052;
        /**  Padding for notification icon when drawn with circle around it 
         */
        public static final int notification_large_icon_circle_padding=0x7f040051;
        /**  The width of the big icons in notifications. 
         */
        public static final int notification_large_icon_height=0x7f040028;
        /**  The width of the big icons in notifications. 
         */
        public static final int notification_large_icon_width=0x7f040027;
        /**  Size of smaller notification text (see TextAppearance.StatusBar.EventContent.Line2, Info, Time) 
         */
        public static final int notification_subtext_size=0x7f04004c;
        /**  Size of notification text (see TextAppearance.StatusBar.EventContent) 
         */
        public static final int notification_text_size=0x7f04004a;
        /**  Size of notification text titles (see TextAppearance.StatusBar.EventContent.Title) 
         */
        public static final int notification_title_text_size=0x7f04004b;
        /**  Top padding for notifications in the standard layout. 
         */
        public static final int notification_top_pad=0x7f04004d;
        /**  Top padding for notification when text is large 
         */
        public static final int notification_top_pad_large_text=0x7f04004f;
        /**  Top padding for notification when text is large and narrow (i.e. it has 3 lines 
         */
        public static final int notification_top_pad_large_text_narrow=0x7f040050;
        /**  Top padding for notifications when narrow (i.e. it has 3 lines) 
         */
        public static final int notification_top_pad_narrow=0x7f04004e;
        /**  Default horizontal gap between keys in the password keyboard (used by keyguard) 
         */
        public static final int password_keyboard_horizontalGap=0x7f04000f;
        /**  Default height of a key in the password keyboard for alpha (used by keyguard) 
         */
        public static final int password_keyboard_key_height_alpha=0x7f04000c;
        /**  Default height of a key in the password keyboard for numeric (used by keyguard) 
         */
        public static final int password_keyboard_key_height_numeric=0x7f04000d;
        /**  Default correction for the space key in the password keyboard  (used by keyguard) 
         */
        public static final int password_keyboard_spacebar_vertical_correction=0x7f04000e;
        /**  Default vertical gap between keys in the password keyboard (used by keyguard) 
         */
        public static final int password_keyboard_verticalGap=0x7f040010;
        /**  Padding to the left of the preference panel breadcrumb 
         */
        public static final int preference_breadcrumb_paddingLeft=0x7f040019;
        /**  Padding to the right of the preference panel breadcrumb 
         */
        public static final int preference_breadcrumb_paddingRight=0x7f04001a;
        public static final int preference_child_padding_side=0x7f040025;
        /**  Preference fragment padding, bottom 
         */
        public static final int preference_fragment_padding_bottom=0x7f040017;
        /**  Preference fragment padding, sides 
         */
        public static final int preference_fragment_padding_side=0x7f040018;
        /** 
         Minimum space to allocate to the left of a preference item for an icon.
        This helps in aligning titles when some items have icons and some don't. When space is
        at a premium, we don't pre-allocate any space.




    
         */
        public static final int preference_icon_minWidth=0x7f04001b;
        public static final int preference_item_padding_inner=0x7f040024;
        /**  outsideOverlay 
         */
        public static final int preference_item_padding_side=0x7f040023;
        /**  Preference activity bottom margin 
         */
        public static final int preference_screen_bottom_margin=0x7f040015;
        public static final int preference_screen_header_padding_side=0x7f040022;
        /**  Preference activity, vertical padding for the header list 
         */
        public static final int preference_screen_header_vertical_padding=0x7f040021;
        /**  Preference activity side margins 
         */
        public static final int preference_screen_side_margin=0x7f040012;
        /**  Preference activity side margins negative 
         */
        public static final int preference_screen_side_margin_negative=0x7f040013;
        /**  Preference activity top margin 
         */
        public static final int preference_screen_top_margin=0x7f040014;
        /**  Preference widget area width (to the left of the text) 
         */
        public static final int preference_widget_width=0x7f040016;
        public static final int resolver_max_width=0x7f04008f;
        /**  Preferred width of the search view. 
         */
        public static final int search_view_preferred_width=0x7f04002a;
        /**  Minimum width of the search view text entry area. 
         */
        public static final int search_view_text_min_width=0x7f040029;
        public static final int spot_shadow_alpha=0x7f040099;
        /**  Size of the giant number (unread count) in the notifications 
         */
        public static final int status_bar_content_number_size=0x7f040009;
        /**  Margin at the edge of the screen to ignore touch events for in the windowshade. 
         */
        public static final int status_bar_edge_ignore=0x7f04000a;
        /**  Height of the status bar 
         */
        public static final int status_bar_height=0x7f040004;
        /**  Height of notification icons in the status bar 
         */
        public static final int status_bar_icon_size=0x7f040008;
        /**  Rounded corner radius for video subtitles. 
         */
        public static final int subtitle_corner_radius=0x7f040072;
        /**  Outline width for video subtitles. 
         */
        public static final int subtitle_outline_width=0x7f040075;
        /**  Shadow offset for video subtitles. 
         */
        public static final int subtitle_shadow_offset=0x7f040074;
        /**  Shadow radius for video subtitles. 
         */
        public static final int subtitle_shadow_radius=0x7f040073;
        public static final int text_handle_min_size=0x7f040094;
        /**  Default width for a textview error popup 
         */
        public static final int textview_error_popup_default_width=0x7f040042;
        /**  The height that is used when creating thumbnails of applications. 
         */
        public static final int thumbnail_height=0x7f040001;
        /**  The width that is used when creating thumbnails of applications. 
         */
        public static final int thumbnail_width=0x7f040000;
        public static final int timepicker_ampm_label_size=0x7f040078;
        public static final int timepicker_ampm_left_padding=0x7f040079;
        public static final int timepicker_extra_time_label_margin=0x7f040077;
        public static final int timepicker_header_height=0x7f04007b;
        public static final int timepicker_minimum_margin_sides=0x7f04007c;
        public static final int timepicker_minimum_margin_top_bottom=0x7f04007d;
        public static final int timepicker_radial_picker_dimen=0x7f04007e;
        public static final int timepicker_separator_padding=0x7f04007a;
        public static final int timepicker_time_label_size=0x7f040076;
        public static final int toast_y_offset=0x7f040003;
    }
    public static final class drawable {
        public static final int button_default_bg=0x7f020000;
        public static final int edittext_bottom_bg=0x7f020001;
        public static final int edittext_default_bg=0x7f020002;
        public static final int edittext_top_bg=0x7f020003;
        public static final int ic_launcher=0x7f020004;
        public static final int linearlayout_bg=0x7f020005;
    }
    public static final class id {
        public static final int btnSignUp=0x7f080005;
        public static final int btnSingIn=0x7f080002;
        public static final int etEmail=0x7f080003;
        public static final int etPass=0x7f080001;
        public static final int etUserName=0x7f080000;
        public static final int linearLayout1=0x7f080004;
    }
    public static final class integer {
        /** 
         The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this.




    
         */
        public static final int max_action_buttons=0x7f050000;
        /**  outsideOverlay 
         */
        public static final int preference_fragment_scrollbarStyle=0x7f050004;
        public static final int preference_screen_header_scrollbarStyle=0x7f050003;
        /**  Weight of the left pane in a multi-pane preference layout. 
         */
        public static final int preferences_left_pane_weight=0x7f050001;
        /**  Weight of the right pane in a multi-pane preference layout. So the split is 40:60 
         */
        public static final int preferences_right_pane_weight=0x7f050002;
    }
    public static final class layout {
        public static final int activity_sign_in_screen=0x7f030000;
        public static final int activity_sign_up_screen=0x7f030001;
        public static final int main=0x7f030002;
    }
    public static final class string {
        public static final int action_settings=0x7f06000d;
        public static final int app_name=0x7f06000c;
        public static final int hello_world=0x7f06000e;
        public static final int timepicker_ampm_circle_radius_multiplier=0x7f060003;
        /**  New TimePicker dimensions. 
         */
        public static final int timepicker_circle_radius_multiplier=0x7f060000;
        public static final int timepicker_circle_radius_multiplier_24HourMode=0x7f060001;
        public static final int timepicker_numbers_radius_multiplier_inner=0x7f060005;
        public static final int timepicker_numbers_radius_multiplier_normal=0x7f060004;
        public static final int timepicker_numbers_radius_multiplier_outer=0x7f060006;
        public static final int timepicker_selection_radius_multiplier=0x7f060002;
        public static final int timepicker_text_size_multiplier_inner=0x7f060008;
        public static final int timepicker_text_size_multiplier_normal=0x7f060007;
        public static final int timepicker_text_size_multiplier_outer=0x7f060009;
        public static final int timepicker_transition_end_radius_multiplier=0x7f06000b;
        public static final int timepicker_transition_mid_radius_multiplier=0x7f06000a;
    }
    public static final class style {
        public static final int DefaultButtonText=0x7f070000;
    }
}
